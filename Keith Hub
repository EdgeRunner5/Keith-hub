-- Place this script in a LocalScript inside StarterPlayerScripts or StarterCharacterScripts

local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local humanoid = player.Character:WaitForChild("Humanoid")
local userInputService = game:GetService("UserInputService")
local runService = game:GetService("RunService")

local animIds = {
    [1] = "17325510002",
    [2] = "17325513870",
    [3] = "17325522388",
    [4] = "17325537719",
    jumpOrFall = "10470104242", -- Animation for when jumping or falling during anim 4
    fKey = "10470389827" -- Animation for F key
}

local cooldown = 0.5
local transitionTime = 2.88
local useCooldown = 3.0  -- Additional cooldown after the fourth animation
local speedBoost = 6
local speedBoostDuration = 1
local fKeySpeedReduction = 2 -- Speed reduction when F key is held down

local lastActionTime = 0
local lastAnimIndex = 0
local animTracks = {}
local isInUseCooldown = false
local isSpeedBoostActive = false
local isFKeyHeld = false
local originalWalkSpeed = humanoid.WalkSpeed
local originalJumpPower = humanoid.JumpPower
local fKeyAnimTrack = nil

-- Function to check if the player is jumping or falling
local function isJumpingOrFalling()
    return humanoid:GetState() == Enum.HumanoidStateType.Jumping or
           humanoid:GetState() == Enum.HumanoidStateType.Freefall
end

-- Function to play an animation
local function playAnimation(animId)
    -- Stop all existing animations
    for _, track in pairs(animTracks) do
        track:Stop()
    end
    
    -- Create and play the new animation
    local anim = Instance.new("Animation")
    anim.AnimationId = "rbxassetid://" .. animId
    local animTrack = humanoid:LoadAnimation(anim)
    animTrack:Play()
    
    -- Save the animation track to stop later
    table.insert(animTracks, animTrack)
    
    -- Disable jumping
    humanoid.JumpPower = 50
    
    -- Apply speed boost if not already active
    if not isSpeedBoostActive then
        isSpeedBoostActive = true
        local originalWalkSpeed = humanoid.WalkSpeed
        humanoid.WalkSpeed = speedBoost
        
        -- Reset speed after the boost duration
        delay(speedBoostDuration, function()
            humanoid.WalkSpeed = originalWalkSpeed
            isSpeedBoostActive = false
        end)
    end
end

-- Function to play the F key animation
local function playFKeyAnimation()
    if not fKeyAnimTrack then
        local anim = Instance.new("Animation")
        anim.AnimationId = "rbxassetid://" .. animIds.fKey
        fKeyAnimTrack = humanoid:LoadAnimation(anim)
    end
    fKeyAnimTrack:Play()
    
    -- Apply speed reduction
    if not isFKeyHeld then
        isFKeyHeld = true
        humanoid.WalkSpeed = originalWalkSpeed - fKeySpeedReduction
    end
end

-- Function to stop the F key animation
local function stopFKeyAnimation()
    if fKeyAnimTrack then
        fKeyAnimTrack:Stop()
    end
    
    -- Restore original speed
    if isFKeyHeld then
        isFKeyHeld = false
        humanoid.WalkSpeed = originalWalkSpeed
    end
end

-- Handle mouse button clicks
mouse.Button1Down:Connect(function()
    local currentTime = tick()
    local timeSinceLastAction = currentTime - lastActionTime
    
    if isInUseCooldown then
        if timeSinceLastAction >= useCooldown then
            isInUseCooldown = false
        else
            return
        end
    end

    if timeSinceLastAction >= cooldown then
        if lastAnimIndex == 0 then
            -- Play the first animation
            playAnimation(animIds[1])
            lastAnimIndex = 1
        elseif lastAnimIndex == 1 and timeSinceLastAction <= transitionTime then
            -- Stop all animations and play the second animation
            playAnimation(animIds[2])
            lastAnimIndex = 2
        elseif lastAnimIndex == 2 and timeSinceLastAction <= transitionTime then
            -- Play the third animation
            playAnimation(animIds[3])
            lastAnimIndex = 3
        elseif lastAnimIndex == 3 and timeSinceLastAction <= transitionTime then
            if isJumpingOrFalling() then
                -- If jumping or falling, play the alternate animation
                playAnimation(animIds.jumpOrFall)
            else
                -- Play the fourth animation and start use cooldown
                playAnimation(animIds[4])
                isInUseCooldown = true
            end
            lastAnimIndex = 4
        else
            -- Reset to the first animation
            playAnimation(animIds[1])
            lastAnimIndex = 1
        end
        
        -- Update the last action time
        lastActionTime = currentTime
    end
end)

-- Handle F key input
userInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    if input.KeyCode == Enum.KeyCode.F then
        playFKeyAnimation()
    end
end)

userInputService.InputEnded:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    if input.KeyCode == Enum.KeyCode.F then
        stopFKeyAnimation() -- Instantly stop the F key animation
    end
end)

-- Restore jump power when no animations are playing
runService.RenderStepped:Connect(function()
    if lastAnimIndex == 0 or (tick() - lastActionTime > transitionTime) then
        humanoid.JumpPower = originalJumpPower
    end
end)
